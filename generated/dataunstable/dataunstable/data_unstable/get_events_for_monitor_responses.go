// Code generated by go-swagger; DO NOT EDIT.

package data_unstable

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chronosphereio/mcp-server/generated/dataunstable/models"
)

// GetEventsForMonitorReader is a Reader for the GetEventsForMonitor structure.
type GetEventsForMonitorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEventsForMonitorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetEventsForMonitorOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetEventsForMonitorDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetEventsForMonitorOK creates a GetEventsForMonitorOK with default headers values
func NewGetEventsForMonitorOK() *GetEventsForMonitorOK {
	return &GetEventsForMonitorOK{}
}

/*
GetEventsForMonitorOK describes a response with status code 200, with default header values.

A successful response.
*/
type GetEventsForMonitorOK struct {
	Payload *models.DataunstableGetEventsForMonitorResponse
}

// IsSuccess returns true when this get events for monitor o k response has a 2xx status code
func (o *GetEventsForMonitorOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get events for monitor o k response has a 3xx status code
func (o *GetEventsForMonitorOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get events for monitor o k response has a 4xx status code
func (o *GetEventsForMonitorOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get events for monitor o k response has a 5xx status code
func (o *GetEventsForMonitorOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get events for monitor o k response a status code equal to that given
func (o *GetEventsForMonitorOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get events for monitor o k response
func (o *GetEventsForMonitorOK) Code() int {
	return 200
}

func (o *GetEventsForMonitorOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/unstable/data/events:histogram-with-details][%d] getEventsForMonitorOK %s", 200, payload)
}

func (o *GetEventsForMonitorOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/unstable/data/events:histogram-with-details][%d] getEventsForMonitorOK %s", 200, payload)
}

func (o *GetEventsForMonitorOK) GetPayload() *models.DataunstableGetEventsForMonitorResponse {
	return o.Payload
}

func (o *GetEventsForMonitorOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DataunstableGetEventsForMonitorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEventsForMonitorDefault creates a GetEventsForMonitorDefault with default headers values
func NewGetEventsForMonitorDefault(code int) *GetEventsForMonitorDefault {
	return &GetEventsForMonitorDefault{
		_statusCode: code,
	}
}

/*
GetEventsForMonitorDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type GetEventsForMonitorDefault struct {
	_statusCode int

	Payload *models.GooglerpcStatus
}

// IsSuccess returns true when this get events for monitor default response has a 2xx status code
func (o *GetEventsForMonitorDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get events for monitor default response has a 3xx status code
func (o *GetEventsForMonitorDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get events for monitor default response has a 4xx status code
func (o *GetEventsForMonitorDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get events for monitor default response has a 5xx status code
func (o *GetEventsForMonitorDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get events for monitor default response a status code equal to that given
func (o *GetEventsForMonitorDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get events for monitor default response
func (o *GetEventsForMonitorDefault) Code() int {
	return o._statusCode
}

func (o *GetEventsForMonitorDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/unstable/data/events:histogram-with-details][%d] GetEventsForMonitor default %s", o._statusCode, payload)
}

func (o *GetEventsForMonitorDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/unstable/data/events:histogram-with-details][%d] GetEventsForMonitor default %s", o._statusCode, payload)
}

func (o *GetEventsForMonitorDefault) GetPayload() *models.GooglerpcStatus {
	return o.Payload
}

func (o *GetEventsForMonitorDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
