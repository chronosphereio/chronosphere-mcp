// Code generated by go-swagger; DO NOT EDIT.

package data_unstable

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chronosphereio/mcp-server/generated/dataunstable/models"
)

// GetLogQueryReader is a Reader for the GetLogQuery structure.
type GetLogQueryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLogQueryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLogQueryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetLogQueryDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetLogQueryOK creates a GetLogQueryOK with default headers values
func NewGetLogQueryOK() *GetLogQueryOK {
	return &GetLogQueryOK{}
}

/*
GetLogQueryOK describes a response with status code 200, with default header values.

A successful response.
*/
type GetLogQueryOK struct {
	Payload *models.DataunstableGetLogQueryResponse
}

// IsSuccess returns true when this get log query o k response has a 2xx status code
func (o *GetLogQueryOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get log query o k response has a 3xx status code
func (o *GetLogQueryOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get log query o k response has a 4xx status code
func (o *GetLogQueryOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get log query o k response has a 5xx status code
func (o *GetLogQueryOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get log query o k response a status code equal to that given
func (o *GetLogQueryOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get log query o k response
func (o *GetLogQueryOK) Code() int {
	return 200
}

func (o *GetLogQueryOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/unstable/data/logs:get-log-query][%d] getLogQueryOK %s", 200, payload)
}

func (o *GetLogQueryOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/unstable/data/logs:get-log-query][%d] getLogQueryOK %s", 200, payload)
}

func (o *GetLogQueryOK) GetPayload() *models.DataunstableGetLogQueryResponse {
	return o.Payload
}

func (o *GetLogQueryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DataunstableGetLogQueryResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLogQueryDefault creates a GetLogQueryDefault with default headers values
func NewGetLogQueryDefault(code int) *GetLogQueryDefault {
	return &GetLogQueryDefault{
		_statusCode: code,
	}
}

/*
GetLogQueryDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type GetLogQueryDefault struct {
	_statusCode int

	Payload *models.APIError
}

// IsSuccess returns true when this get log query default response has a 2xx status code
func (o *GetLogQueryDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get log query default response has a 3xx status code
func (o *GetLogQueryDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get log query default response has a 4xx status code
func (o *GetLogQueryDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get log query default response has a 5xx status code
func (o *GetLogQueryDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get log query default response a status code equal to that given
func (o *GetLogQueryDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get log query default response
func (o *GetLogQueryDefault) Code() int {
	return o._statusCode
}

func (o *GetLogQueryDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/unstable/data/logs:get-log-query][%d] GetLogQuery default %s", o._statusCode, payload)
}

func (o *GetLogQueryDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/unstable/data/logs:get-log-query][%d] GetLogQuery default %s", o._statusCode, payload)
}

func (o *GetLogQueryDefault) GetPayload() *models.APIError {
	return o.Payload
}

func (o *GetLogQueryDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
