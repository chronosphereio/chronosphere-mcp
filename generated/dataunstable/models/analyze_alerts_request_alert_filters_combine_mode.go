// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// AnalyzeAlertsRequestAlertFiltersCombineMode AlertFiltersCombineMode specifies how multiple AlertFilters are combined
//
// - ALERT_FILTERS_OR: At least one filter must match
//
// swagger:model AnalyzeAlertsRequestAlertFiltersCombineMode
type AnalyzeAlertsRequestAlertFiltersCombineMode string

func NewAnalyzeAlertsRequestAlertFiltersCombineMode(value AnalyzeAlertsRequestAlertFiltersCombineMode) *AnalyzeAlertsRequestAlertFiltersCombineMode {
	return &value
}

// Pointer returns a pointer to a freshly-allocated AnalyzeAlertsRequestAlertFiltersCombineMode.
func (m AnalyzeAlertsRequestAlertFiltersCombineMode) Pointer() *AnalyzeAlertsRequestAlertFiltersCombineMode {
	return &m
}

const (

	// AnalyzeAlertsRequestAlertFiltersCombineModeALERTFILTERSOR captures enum value "ALERT_FILTERS_OR"
	AnalyzeAlertsRequestAlertFiltersCombineModeALERTFILTERSOR AnalyzeAlertsRequestAlertFiltersCombineMode = "ALERT_FILTERS_OR"
)

// for schema
var analyzeAlertsRequestAlertFiltersCombineModeEnum []interface{}

func init() {
	var res []AnalyzeAlertsRequestAlertFiltersCombineMode
	if err := json.Unmarshal([]byte(`["ALERT_FILTERS_OR"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		analyzeAlertsRequestAlertFiltersCombineModeEnum = append(analyzeAlertsRequestAlertFiltersCombineModeEnum, v)
	}
}

func (m AnalyzeAlertsRequestAlertFiltersCombineMode) validateAnalyzeAlertsRequestAlertFiltersCombineModeEnum(path, location string, value AnalyzeAlertsRequestAlertFiltersCombineMode) error {
	if err := validate.EnumCase(path, location, value, analyzeAlertsRequestAlertFiltersCombineModeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this analyze alerts request alert filters combine mode
func (m AnalyzeAlertsRequestAlertFiltersCombineMode) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAnalyzeAlertsRequestAlertFiltersCombineModeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this analyze alerts request alert filters combine mode based on context it is used
func (m AnalyzeAlertsRequestAlertFiltersCombineMode) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
