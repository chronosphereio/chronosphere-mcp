// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DataunstableEventDetails dataunstable event details
//
// swagger:model dataunstableEventDetails
type DataunstableEventDetails struct {

	// The category the event belongs to.
	Category string `json:"category,omitempty"`

	// The time the event occurred.
	// Format: date-time
	HappenedAt strfmt.DateTime `json:"happened_at,omitempty"`

	// Unique identifier
	ID string `json:"id,omitempty"`
}

// Validate validates this dataunstable event details
func (m *DataunstableEventDetails) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateHappenedAt(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DataunstableEventDetails) validateHappenedAt(formats strfmt.Registry) error {
	if swag.IsZero(m.HappenedAt) { // not required
		return nil
	}

	if err := validate.FormatOf("happened_at", "body", "date-time", m.HappenedAt.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this dataunstable event details based on context it is used
func (m *DataunstableEventDetails) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DataunstableEventDetails) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DataunstableEventDetails) UnmarshalBinary(b []byte) error {
	var res DataunstableEventDetails
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
