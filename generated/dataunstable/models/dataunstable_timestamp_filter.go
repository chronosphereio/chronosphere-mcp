// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DataunstableTimestampFilter dataunstable timestamp filter
//
// swagger:model dataunstableTimestampFilter
type DataunstableTimestampFilter struct {

	// Only log messages with a timestamp after this time will be returned.
	// Format: date-time
	HappenedAfter strfmt.DateTime `json:"happened_after,omitempty"`

	// Only log messages with a timestamp before this time will be returned.
	// Format: date-time
	HappenedBefore strfmt.DateTime `json:"happened_before,omitempty"`
}

// Validate validates this dataunstable timestamp filter
func (m *DataunstableTimestampFilter) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateHappenedAfter(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateHappenedBefore(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DataunstableTimestampFilter) validateHappenedAfter(formats strfmt.Registry) error {
	if swag.IsZero(m.HappenedAfter) { // not required
		return nil
	}

	if err := validate.FormatOf("happened_after", "body", "date-time", m.HappenedAfter.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *DataunstableTimestampFilter) validateHappenedBefore(formats strfmt.Registry) error {
	if swag.IsZero(m.HappenedBefore) { // not required
		return nil
	}

	if err := validate.FormatOf("happened_before", "body", "date-time", m.HappenedBefore.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this dataunstable timestamp filter based on context it is used
func (m *DataunstableTimestampFilter) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DataunstableTimestampFilter) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DataunstableTimestampFilter) UnmarshalBinary(b []byte) error {
	var res DataunstableTimestampFilter
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
