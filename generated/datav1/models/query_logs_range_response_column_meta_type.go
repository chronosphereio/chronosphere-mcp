// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// QueryLogsRangeResponseColumnMetaType query logs range response column meta type
//
// swagger:model QueryLogsRangeResponseColumnMetaType
type QueryLogsRangeResponseColumnMetaType string

func NewQueryLogsRangeResponseColumnMetaType(value QueryLogsRangeResponseColumnMetaType) *QueryLogsRangeResponseColumnMetaType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated QueryLogsRangeResponseColumnMetaType.
func (m QueryLogsRangeResponseColumnMetaType) Pointer() *QueryLogsRangeResponseColumnMetaType {
	return &m
}

const (

	// QueryLogsRangeResponseColumnMetaTypeBOOLEAN captures enum value "BOOLEAN"
	QueryLogsRangeResponseColumnMetaTypeBOOLEAN QueryLogsRangeResponseColumnMetaType = "BOOLEAN"

	// QueryLogsRangeResponseColumnMetaTypeFLOAT captures enum value "FLOAT"
	QueryLogsRangeResponseColumnMetaTypeFLOAT QueryLogsRangeResponseColumnMetaType = "FLOAT"

	// QueryLogsRangeResponseColumnMetaTypeSTRING captures enum value "STRING"
	QueryLogsRangeResponseColumnMetaTypeSTRING QueryLogsRangeResponseColumnMetaType = "STRING"
)

// for schema
var queryLogsRangeResponseColumnMetaTypeEnum []interface{}

func init() {
	var res []QueryLogsRangeResponseColumnMetaType
	if err := json.Unmarshal([]byte(`["BOOLEAN","FLOAT","STRING"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		queryLogsRangeResponseColumnMetaTypeEnum = append(queryLogsRangeResponseColumnMetaTypeEnum, v)
	}
}

func (m QueryLogsRangeResponseColumnMetaType) validateQueryLogsRangeResponseColumnMetaTypeEnum(path, location string, value QueryLogsRangeResponseColumnMetaType) error {
	if err := validate.EnumCase(path, location, value, queryLogsRangeResponseColumnMetaTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this query logs range response column meta type
func (m QueryLogsRangeResponseColumnMetaType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateQueryLogsRangeResponseColumnMetaTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this query logs range response column meta type based on context it is used
func (m QueryLogsRangeResponseColumnMetaType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
