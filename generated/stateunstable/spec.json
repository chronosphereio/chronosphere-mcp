{
  "consumes": [
    "application/json"
  ],
  "definitions": {
    "ListMonitorStatusesRequestSortOrder": {
      "enum": [
        "SORT_BY_STATE"
      ],
      "type": "string"
    },
    "MonitorStatusSignalStatus": {
      "properties": {
        "state": {
          "$ref": "#/definitions/stateunstableAlertingState"
        },
        "severity": {
          "type": "string"
        },
        "signal_labels": {
          "description": "Signal labels.",
          "items": {
            "$ref": "#/definitions/commonLabel"
          },
          "type": "array"
        },
        "series": {
          "items": {
            "$ref": "#/definitions/SignalStatusSeriesStatus"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "SignalStatusSeriesStatus": {
      "properties": {
        "state": {
          "$ref": "#/definitions/stateunstableAlertingState"
        },
        "severity": {
          "type": "string"
        },
        "labels": {
          "description": "Series labels.",
          "items": {
            "$ref": "#/definitions/commonLabel"
          },
          "type": "array"
        },
        "started_at": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "apiError": {
      "properties": {
        "code": {
          "description": "An optional private error code whose values are undefined.",
          "format": "int32",
          "type": "integer"
        },
        "message": {
          "description": "An error message describing what went wrong.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "commonLabel": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "commonPromQLMatcher": {
      "properties": {
        "type": {
          "$ref": "#/definitions/commonPromQLMatcherType"
        },
        "name": {
          "description": "Prometheus label name for the matcher",
          "type": "string"
        },
        "value": {
          "description": "Prometheus label value for the matcher",
          "type": "string"
        }
      },
      "type": "object"
    },
    "commonPromQLMatcherType": {
      "enum": [
        "MatchEqual",
        "MatchRegexp",
        "MatchNotEqual",
        "MatchNotRegexp"
      ],
      "type": "string"
    },
    "genericError": {
      "additionalProperties": true,
      "type": "object"
    },
    "protobufAny": {
      "additionalProperties": {},
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "stateunstableAlertingState": {
      "description": " - ALERTING_STATE_PASS: Monitor is not triggered.\n - ALERTING_STATE_PENDING: Monitor is triggered but not yet alerting.\n - ALERTING_STATE_ALERTING: Monitor is triggered and alerting.\n - ALERTING_STATE_MUTED: Monitor is triggered but is muted.",
      "enum": [
        "ALERTING_STATE_PASS",
        "ALERTING_STATE_PENDING",
        "ALERTING_STATE_ALERTING",
        "ALERTING_STATE_MUTED"
      ],
      "type": "string"
    },
    "stateunstableEchoResponse": {
      "properties": {
        "message": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "stateunstableListMonitorStatusesResponse": {
      "properties": {
        "monitor_statuses": {
          "items": {
            "$ref": "#/definitions/stateunstableMonitorStatus"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "stateunstableMonitorStatus": {
      "description": "MonitorStatus contains the status of a monitor.",
      "properties": {
        "slug": {
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/stateunstableAlertingState"
        },
        "severity": {
          "type": "string"
        },
        "signals": {
          "items": {
            "$ref": "#/definitions/MonitorStatusSignalStatus"
          },
          "type": "array"
        }
      },
      "type": "object"
    }
  },
  "info": {
    "description": "\n\u003cb\u003eWARNING: This API is unstable and is meant for experimentation only. Do not\nuse this API in production. The endpoints and schemas referenced in this\ndocumentation will be changed or removed without notice and without any\nbackwards compatibility guarantee. Note that even though this API is unstable,\nit is still connected to production data, so use with caution.\u003c/b\u003e",
    "title": "State Unstable API",
    "version": "UNSTABLE"
  },
  "paths": {
    "/api/unstable/state/echo": {
      "get": {
        "operationId": "Echo",
        "parameters": [
          {
            "in": "query",
            "name": "message",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/stateunstableEchoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/apiError"
            }
          }
        },
        "tags": [
          "StateUnstable"
        ]
      }
    },
    "/api/unstable/state/monitors-statuses": {
      "get": {
        "operationId": "ListMonitorStatuses",
        "parameters": [
          {
            "collectionFormat": "multi",
            "description": "Filter by monitor slug.\nIf all filters are empty, return status for all monitors.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "monitor_slugs",
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "Filter monitor state by owning collection.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "collection_slugs",
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "Filter monitor state by owning team.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "team_slugs",
            "type": "array"
          },
          {
            "description": "include_signal_statuses must be true for include_series_statuses to be true.",
            "in": "query",
            "name": "include_signal_statuses",
            "type": "boolean"
          },
          {
            "description": "include_signal_statuses must be true for include_series_statuses to be true.",
            "in": "query",
            "name": "include_series_statuses",
            "type": "boolean"
          },
          {
            "enum": [
              "SORT_BY_STATE"
            ],
            "in": "query",
            "name": "sort_by",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/stateunstableListMonitorStatusesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/apiError"
            }
          }
        },
        "tags": [
          "StateUnstable"
        ]
      }
    }
  },
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "tags": [
    {
      "name": "StateUnstable"
    }
  ]
}